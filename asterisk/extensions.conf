[general]
static=yes
writeprotect=no
clearglobalvars=no
[globals]
;PATH= /usr/share/asterisk/sounds
PATH= /etc/asterisk/sounds
COUNT=0
CONSOLE=Console/dsp       ; Console interface for demo
IAXINFO=guest         ; IAXtel username/password
TRUNK=DAHDI/G2          ; Trunk interface
TRUNKMSD=1          ; MSD digits to strip (usually 1 or 0)
[dundi-e164-canonical]
[dundi-e164-customers]
[dundi-e164-via-pstn]
[dundi-e164-local]
include => dundi-e164-canonical
include => dundi-e164-customers
include => dundi-e164-via-pstn
[dundi-e164-switch]
switch => DUNDi/e164
[dundi-e164-lookup]
include => dundi-e164-local
include => dundi-e164-switch
[macro-dundi-e164]
exten => s,1,Goto(${ARG1},1)
include => dundi-e164-lookup
[iaxtel700]
exten => _91700XXXXXXX,1,Dial(IAX2/${GLOBAL(IAXINFO)}@iaxtel.com/${EXTEN:1}@iaxtel)
[iaxprovider]
[trunkint]
exten => _9011.,1,Macro(dundi-e164,${EXTEN:4})
exten => _9011.,n,Dial(${GLOBAL(TRUNK)}/${FILTER(0-9,${EXTEN:${GLOBAL(TRUNKMSD)}})})
[trunkld]
exten => _91NXXNXXXXXX,1,Macro(dundi-e164,${EXTEN:1})
exten => _91NXXNXXXXXX,n,Dial(${GLOBAL(TRUNK)}/${EXTEN:${GLOBAL(TRUNKMSD)}})
[trunklocal]
exten => _9NXXXXXX,1,Dial(${GLOBAL(TRUNK)}/${EXTEN:${GLOBAL(TRUNKMSD)}})
[trunktollfree]
exten => _91800NXXXXXX,1,Dial(${GLOBAL(TRUNK)}/${EXTEN:${GLOBAL(TRUNKMSD)}})
exten => _91888NXXXXXX,1,Dial(${GLOBAL(TRUNK)}/${EXTEN:${GLOBAL(TRUNKMSD)}})
exten => _91877NXXXXXX,1,Dial(${GLOBAL(TRUNK)}/${EXTEN:${GLOBAL(TRUNKMSD)}})
exten => _91866NXXXXXX,1,Dial(${GLOBAL(TRUNK)}/${EXTEN:${GLOBAL(TRUNKMSD)}})
[international]
ignorepat => 9
include => longdistance
include => trunkint
[longdistance]
ignorepat => 9
include => local
include => trunkld
[local]
ignorepat => 9
include => default
include => trunklocal
include => iaxtel700
include => trunktollfree
include => iaxprovider
include => parkedcalls
[outbound-freenum]
exten => _X*X!,1,Goto(outbound-freenum2,${EXTEN},1)
exten => _XX*X!,1,Goto(outbound-freenum2,${EXTEN},1)
exten => _XXX*X!,1,Goto(outbound-freenum2,${EXTEN},1)
exten => _XXXX*X!,1,Goto(outbound-freenum2,${EXTEN},1)
exten => _XXXXX*X!,1,Goto(outbound-freenum2,${EXTEN},1)
exten => _XXXXXX*X!,1,Goto(outbound-freenum2,${EXTEN},1)
[outbound-freenum2]
exten => _X!,1,Verbose(2,Performing ISN lookup for ${EXTEN})
same => n,Set(SUFFIX=${CUT(EXTEN,*,2-)})                                ; make sure the suffix is all digits as well
same => n,GotoIf($["${FILTER(0-9,${SUFFIX})}" != "${SUFFIX}"]?fn-CONGESTION,1)
            ; filter out bad characters per the README-SERIOUSLY.best-practices.txt document
same => n,Set(TIMEOUT(absolute)=10800)
same => n,Set(isnresult=${ENUMLOOKUP(${EXTEN},sip,,1,freenum.org)})     ; perform our lookup with freenum.org
same => n,GotoIf($["${isnresult}" != ""]?from)
same => n,Set(DIALSTATUS=CONGESTION)
same => n,Goto(fn-CONGESTION,1)
same => n(from),Set(__SIPFROMUSER=${CALLERID(num)})
same => n,GotoIf($["${GLOBAL(FREENUMDOMAIN)}" = ""]?dial)               ; check if we set the FREENUMDOMAIN global variable in [global]
same => n,Set(__SIPFROMDOMAIN=${GLOBAL(FREENUMDOMAIN)})                 ;    if we did set it, then we'll use it for our outbound dialing domain
same => n(dial),Dial(SIP/${isnresult},40)
same => n,Goto(fn-${DIALSTATUS},1)
exten => fn-BUSY,1,Busy()
exten => _f[n]-.,1,NoOp(ISN: ${DIALSTATUS})
same => n,Congestion()
[macro-trunkdial]
exten => s,1,Dial(${ARG1})
exten => s,n,Goto(s-${DIALSTATUS},1)
exten => s-NOANSWER,1,Hangup
exten => s-BUSY,1,Hangup
exten => _s-.,1,NoOp
[stdexten]
exten => _X.,50000(stdexten),NoOp(Start stdexten)
exten => _X.,n,Set(LOCAL(ext)=${EXTEN})
exten => _X.,n,Set(LOCAL(dev)=${ARG1})
exten => _X.,n,Set(LOCAL(cntx)=${ARG2})
exten => _X.,n,Set(LOCAL(mbx)=${ext}${IF($[!${ISNULL(${cntx})}]?@${cntx})})
exten => _X.,n,Dial(${dev},20)        ; Ring the interface, 20 seconds maximum
exten => _X.,n,Goto(stdexten-${DIALSTATUS},1)   ; Jump based on status (NOANSWER,BUSY,CHANUNAVAIL,CONGESTION,ANSWER)
exten => stdexten-NOANSWER,1,Voicemail(${mbx},u)  ; If unavailable, send to voicemail w/ unavail announce
exten => stdexten-NOANSWER,n,Return()     ; If they press #, return to start
exten => stdexten-BUSY,1,Voicemail(${mbx},b)    ; If busy, send to voicemail w/ busy announce
exten => stdexten-BUSY,n,Return()     ; If they press #, return to start
exten => _stde[x]te[n]-.,1,Goto(stdexten-NOANSWER,1)  ; Treat anything else as no answer
exten => a,1,VoicemailMain(${mbx})      ; If they press *, send the user into VoicemailMain
exten => a,n,Return()
[stdPrivacyexten]
exten => _X.,60000(stdPrivacyexten),NoOp(Start stdPrivacyexten)
exten => _X.,n,Set(LOCAL(ext)=${ARG1})
exten => _X.,n,Set(LOCAL(dev)=${ARG2})
exten => _X.,n,Set(LOCAL(dontcntx)=${ARG3})
exten => _X.,n,Set(LOCAL(tortcntx)=${ARG4})
exten => _X.,n,Set(LOCAL(cntx)=${ARG5})
exten => _X.,n,Set(LOCAL(mbx)="${ext}"$["${cntx}" ? "@${cntx}" :: ""])
exten => _X.,n,Dial(${dev},20,p)      ; Ring the interface, 20 seconds maximum, call screening
exten => _X.,n,Goto(stdexten-${DIALSTATUS},1)   ; Jump based on status (NOANSWER,BUSY,CHANUNAVAIL,CONGESTION,ANSWER)
exten => stdexten-NOANSWER,1,Voicemail(${mbx},u)  ; If unavailable, send to voicemail w/ unavail announce
exten => stdexten-NOANSWER,n,NoOp(Finish stdPrivacyexten NOANSWER)
exten => stdexten-NOANSWER,n,Return()     ; If they press #, return to start
exten => stdexten-BUSY,1,Voicemail(${mbx},b)    ; If busy, send to voicemail w/ busy announce
exten => stdexten-BUSY,n,NoOp(Finish stdPrivacyexten BUSY)
exten => stdexten-BUSY,n,Return()     ; If they press #, return to start
exten => stdexten-DONTCALL,1,Goto(${dontcntx},s,1)  ; Callee chose to send this call to a polite "Don't call again" script.
exten => stdexten-TORTURE,1,Goto(${tortcntx},s,1) ; Callee chose to send this call to a telemarketer torture script.
exten => _stde[x]te[n]-.,1,Goto(stdexten-NOANSWER,1)  ; Treat anything else as no answer
exten => a,1,VoicemailMain(${mbx})    ; If they press *, send the user into VoicemailMain
exten => a,n,Return
[macro-page];
exten => s,1,ChanIsAvail(${ARG1},s)     ; s is for ANY call
exten => s,n,GoToIf($[${AVAILSTATUS} = "1"]?autoanswer:fail)
exten => s,n(autoanswer),Set(_ALERT_INFO="RA")      ; This is for the PolyComs
exten => s,n,SIPAddHeader(Call-Info: Answer-After=0)  ; This is for the Grandstream, Snoms, and Others
exten => s,n,NoOp()         ; Add others here and Post on the Wiki!!!!
exten => s,n,Dial(${ARG1})
exten => s,n(fail),Hangup

[demo]
include => stdexten
exten => s,1,Wait(1)      ; Wait a second, just for fun
exten => s,n,Answer     ; Answer the line
exten => s,n,Set(TIMEOUT(digit)=5)  ; Set Digit Timeout to 5 seconds
exten => s,n,Set(TIMEOUT(response)=10)  ; Set Response Timeout to 10 seconds
exten => s,n(restart),BackGround(demo-congrats) ; Play a congratulatory message
exten => s,n(instruct),BackGround(demo-instruct)  ; Play some instructions
exten => s,n,WaitExten      ; Wait for an extension to be dialed.
exten => 2,1,BackGround(demo-moreinfo)  ; Give some more information.
exten => 2,n,Goto(s,instruct)
exten => 3,1,Set(LANGUAGE()=fr)   ; Set language to french
exten => 3,n,Goto(s,restart)    ; Start with the congratulations
exten => 1000,1,Goto(default,s,1)
exten => 1234,1,Playback(transfer,skip)   ; "Please hold while..."
exten => 1234,n,Gosub(${EXTEN},stdexten(${GLOBAL(CONSOLE)}))
exten => 1234,n,Goto(default,s,1)   ; exited Voicemail
exten => 1235,1,Voicemail(1234,u)   ; Right to voicemail
exten => 1236,1,Dial(Console/dsp)   ; Ring forever
exten => 1236,n,Voicemail(1234,b)   ; Unless busy
exten => #,1,Playback(demo-thanks)  ; "Thanks for trying the demo"
exten => #,n,Hangup     ; Hang them up.
exten => t,1,Goto(#,1)      ; If they take too long, give up
exten => i,1,Playback(invalid)    ; "That's not valid, try again"
exten => 500,1,Playback(demo-abouttotry); Let them know what's going on
exten => 500,n,Dial(IAX2/guest@pbx.digium.com/s@default)  ; Call the Asterisk demo
exten => 500,n,Playback(demo-nogo)  ; Couldn't connect to the demo site
exten => 500,n,Goto(s,6)    ; Return to the start over message.
exten => 600,1,Playback(demo-echotest)  ; Let them know what's going on
exten => 600,n,Echo     ; Do the echo test
exten => 600,n,Playback(demo-echodone)  ; Let them know it's over
exten => 600,n,Goto(s,6)    ; Start over
;exten => 81248,1,Macro(page,SIP/Grandstream1)
exten => _7XXX,1,Macro(page,SIP/${EXTEN})
exten => 7999,1,Set(TIMEOUT(absolute)=60)
exten => 7999,2,Page(Local/Grandstream1@page&Local/Xlite1@page&Local/1234@page/n,d)
exten => 8500,1,VoicemailMain
exten => 8500,n,Goto(s,6)
exten => _300X,1,Dial(sip/${EXTEN},5,r)
exten => _400X,1,Dial(sip/${EXTEN},5,r)
exten => _500X,1,Dial(sip/${EXTEN},5,r)
exten => 9999,1,Goto(teste_IVVR,s,1)
exten => 81248,1,Ringing()                  ; Give a ringing tone to the caller
same => n,Wait(5)
same => n,Answer()
same => n,Goto(menu,s,1)
[menu]
exten => s,1,Background(${PATH}/main_menu)
same => n,Wait(1)
same => n,Goto(s,1)
exten => 0,1,Playback(${PATH}/goodbye)
same => n,Hangup()
exten => 1,1,Goto(DTMF,s,1)
exten => 2,1,Goto(NumberGuessing,s,1)
exten => 3,1,Goto(Meteo,s,1)
exten => 9,1,Goto(CallingOperator,s,1)
exten => i,1,Background(${PATH}/sorry)
same => n,Wait(1)
same => n,Goto(s,1)
[DTMF]
exten => s,1,Read(digit,${PATH}/DTMF,1,,,5)
same => n,GotoIf($[${ISNULL(${digit})} = 1]?menu,s,1)
same => n,SayDigits(${digit})
same => n,Wait(1)
same => n,Goto(s,1)
[NumberGuessing]
exten => s,1,Set(Number=${RAND(0,20)})
same => n,Set(Counter=1)
same => n(start),Read(digit,${PATH}/DTMF,2,,,5)
same => n,GotoIf($[${ISNULL(${digit})}=1]?start)
same => n,GotoIf($[$[${digit}>20]|$[${digit}<0]]?invalid)
same => n,GotoIf($[${digit}=${Number}]?win)
same => n,GotoIf($[${digit}>${Number}]?tooBig)
same => n(tooSmall),Playback(${PATH}/tooSmall)
same => n,Goto(end)
same => n(invalid),Playback(${PATH}/invalid)
same => n,Goto(start)
same => n(win),Playback(${PATH}/win)
same => n,Goto(menu,s,1)
same => n(tooBig),Playback(${PATH}/tooBig)
same => n(end),Set(Counter=$[${Counter}+1}])
same => n,GotoIf($["${Counter}"<"6"]?start)
same => n,Playback(${PATH}/theNumberWas)
same => n,Wait(0.5)
same => n,SayNumber(${Number})
same => n,Wait(1)
same => n,Goto(menu,s,1)
[Meteo]
exten => s,1,Playback(${PATH}/welcome)
same => n,AGI(get.php)
same => n,Playback(${PATH}/vm-goodbye)
same => n,Goto(menu,s,1)
[CallingOperator]
exten => s,1,Playback(${PATH}/callingOperator)
same => n,Dial(SIP/4000,5,g)
same => n,ExecIf($["${DIALSTATUS}"="NOANSWER"]?Playback(${PATH}/missed))
same => n,Wait(1)
same => n,Goto(menu,s,1)
[page]
exten => _X.,1,Macro(page,SIP/${EXTEN})
[default]
[time]
exten => _X.,30000(time),NoOp(Time: ${EXTEN} ${timezone})
exten => _X.,n,Wait(0.25)
exten => _X.,n,Answer()
exten => _X.,n,Set(FUTURETIME=$[${EPOCH} + 12])
exten => _X.,n,SayUnixTime(${FUTURETIME},Zulu,HNS)
exten => _X.,n,SayPhonetic(z)
exten => _X.,n,SayUnixTime(${FUTURETIME},${timezone},HNS)
exten => _X.,n,Playback(spy-local)
exten => _X.,n,WaitUntil(${FUTURETIME})
exten => _X.,n,Playback(beep)
exten => _X.,n,Return()
[ani]
exten => _X.,40000(ani),NoOp(ANI: ${EXTEN})
exten => _X.,n,Wait(0.25)
exten => _X.,n,Answer()
exten => _X.,n,Playback(vm-from)
exten => _X.,n,SayDigits(${CALLERID(ani)})
exten => _X.,n,Wait(1.25)
exten => _X.,n,SayDigits(${CALLERID(ani)})  ; playback again in case of missed digit
exten => _X.,n,Return()
[IVVR]
exten => s,1,Ringing()      ; Give a ringing tone to the caller
same => n,Answer()
same => n,Set(GLOBAL(COUNT)=$[${COUNT} + 1])
same => n(menu),Background(${PATH}/main_menu)
same => n,Background(silence/5)
same => n,Goto(menu)
exten => 0,1,Playback(${PATH}/goodbye)      ; "Thanks for calling"
exten => 0,Hangup()                     ; Hang them up.
exten => 1,1,Playback(${PATH}/teste)
same => n,Goto(s,menu)
exten => 2,1,Playback(you-are-caller-num)
same => n,Wait(1)                    ; Wait a second
same => n,SayNumber(${COUNT})
same => n,Wait(1)                    ; Wait a second
same => n,Playback(goodbye)
same => n,Wait(2)                    ; Wait 2 seconds
same => n,Hangup()
exten => i,1,Background(sorry)
same => n,Goto(s,menu)
exten => 1235,1,Voicemail(1234,u)               ; Right to voicemail
